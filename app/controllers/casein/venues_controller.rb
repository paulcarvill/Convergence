# Scaffolding generated by Casein v5.0.1.0

module Casein
  class VenuesController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Venues'
  		@venues = Venue.order(sort_order(:name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View venue'
      @venue = Venue.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new venue'
    	@venue = Venue.new
    end

    def create
      @venue = Venue.new venue_params
    
      if @venue.save
        flash[:notice] = 'Venue created'
        redirect_to casein_venues_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new venue'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update venue'
      
      @venue = Venue.find params[:id]
    
      if @venue.update_attributes venue_params
        flash[:notice] = 'Venue has been updated'
        redirect_to casein_venues_path
      else
        flash.now[:warning] = 'There were problems when trying to update this venue'
        render :action => :show
      end
    end
 
    def destroy
      @venue = Venue.find params[:id]

      @venue.destroy
      flash[:notice] = 'Venue has been deleted'
      redirect_to casein_venues_path
    end
  
    private
      
      def venue_params
        params.require(:venue).permit(:name, :location, :details)
      end

  end
end
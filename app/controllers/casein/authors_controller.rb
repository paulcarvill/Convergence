# Scaffolding generated by Casein v5.0.1.0

module Casein
  class AuthorsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Authors'
  		@authors = Author.order(sort_order(:name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View author'
      @author = Author.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new author'
    	@author = Author.new
    end

    def create
      @author = Author.new author_params
    
      if @author.save
        flash[:notice] = 'Author created'
        redirect_to casein_authors_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new author'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update author'
      
      @author = Author.find params[:id]
    
      if @author.update_attributes author_params
        flash[:notice] = 'Author has been updated'
        redirect_to casein_authors_path
      else
        flash.now[:warning] = 'There were problems when trying to update this author'
        render :action => :show
      end
    end
 
    def destroy
      @author = Author.find params[:id]

      @author.destroy
      flash[:notice] = 'Author has been deleted'
      redirect_to casein_authors_path
    end
  
    private
      
      def author_params
        params.require(:author).permit(:name)
      end

  end
end
# Scaffolding generated by Casein v5.0.1.0

module Casein
  class BlogsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Blogs'
  		@blogs = Blog.order(sort_order(:title)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View blog'
      @blog = Blog.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new blog'
    	@blog = Blog.new
    end

    def create
      @blog = Blog.new blog_params
    
      if @blog.save
        flash[:notice] = 'Blog created'
        redirect_to casein_blogs_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new blog'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update blog'
      
      @blog = Blog.find params[:id]
    
      if @blog.update_attributes blog_params
        flash[:notice] = 'Blog has been updated'
        redirect_to casein_blogs_path
      else
        flash.now[:warning] = 'There were problems when trying to update this blog'
        render :action => :show
      end
    end
 
    def destroy
      @blog = Blog.find params[:id]

      @blog.destroy
      flash[:notice] = 'Blog has been deleted'
      redirect_to casein_blogs_path
    end
  
    private
      
      def blog_params
        params.require(:blog).permit(:title, :body, :category_id, :author_id)
      end

  end
end